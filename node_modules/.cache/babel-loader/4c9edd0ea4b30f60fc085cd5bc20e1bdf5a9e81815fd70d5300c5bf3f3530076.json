{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandi\\\\Downloads\\\\q6_scaffold\\\\q6_scaffold\\\\src\\\\components\\\\ExpenseForm\\\\ExpenseForm.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport styles from \"./ExpenseForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ExpenseForm = function ExpenseForm(_ref) {\n  _s();\n  var addExpense = _ref.addExpense,\n    isEditing = _ref.isEditing;\n  var expenseTextInput = useRef();\n  var expenseAmountInput = useRef();\n\n  // Use the useEffect hook here, to check if an expense is to be updated\n  // If yes, the autofill the form values with the text and amount of the expense\n  useEffect(function () {}, [exp]);\n  var onSubmitHandler = function onSubmitHandler(e) {\n    e.preventDefault();\n    var expenseText = expenseTextInput.current.value;\n    var expenseAmount = expenseAmountInput.current.value;\n    if (parseInt(expenseAmount) === 0) {\n      return;\n    }\n    var expense = {\n      text: expenseText,\n      amount: expenseAmount,\n      id: new Date().getTime()\n    };\n    addExpense(expense);\n    clearInput();\n    return;\n\n    // Logic to update expense here\n  };\n\n  var clearInput = function clearInput() {\n    expenseAmountInput.current.value = \"\";\n    expenseTextInput.current.value = \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"expenseText\",\n      children: \"Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"expenseText\",\n      className: styles.input,\n      type: \"text\",\n      placeholder: \"Enter text...\",\n      ref: expenseTextInput,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"expenseAmount\",\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"(negative - expense,positive-income)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.input,\n      id: \"expenseAmount\",\n      type: \"number\",\n      placeholder: \"Enter amount...\",\n      ref: expenseAmountInput,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.submitBtn,\n      children: \"Add Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n_s(ExpenseForm, \"UdG5ZS4XLgcSBZQIdUl66OXB3RE=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useEffect","useRef","styles","jsxDEV","_jsxDEV","ExpenseForm","_ref","_s","addExpense","isEditing","expenseTextInput","expenseAmountInput","exp","onSubmitHandler","e","preventDefault","expenseText","current","value","expenseAmount","parseInt","expense","text","amount","id","Date","getTime","clearInput","className","form","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","htmlFor","input","type","placeholder","ref","required","submitBtn","_c","$RefreshReg$"],"sources":["C:/Users/nandi/Downloads/q6_scaffold/q6_scaffold/src/components/ExpenseForm/ExpenseForm.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport styles from \"./ExpenseForm.module.css\";\r\n\r\nconst ExpenseForm = ({ addExpense, isEditing   }) => {\r\n  const expenseTextInput = useRef();\r\n  const expenseAmountInput = useRef();\r\n\r\n  // Use the useEffect hook here, to check if an expense is to be updated\r\n  // If yes, the autofill the form values with the text and amount of the expense\r\n  useEffect(()=>{},[exp])\r\n\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const expenseText = expenseTextInput.current.value;\r\n    const expenseAmount = expenseAmountInput.current.value;\r\n    if (parseInt(expenseAmount) === 0) {\r\n      return;\r\n    }\r\n\r\n    const expense = {\r\n      text: expenseText,\r\n      amount: expenseAmount,\r\n      id: new Date().getTime()\r\n    };\r\n    addExpense(expense);\r\n    clearInput();\r\n    return;\r\n\r\n    // Logic to update expense here\r\n  };\r\n\r\n  const clearInput = () => {\r\n    expenseAmountInput.current.value = \"\";\r\n    expenseTextInput.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={onSubmitHandler}>\r\n      {/* Change text to Edit Transaction if an expense is to be updated */}\r\n      <h3>Add new transaction</h3>\r\n      <label htmlFor=\"expenseText\">Text</label>\r\n      <input\r\n        id=\"expenseText\"\r\n        className={styles.input}\r\n        type=\"text\"\r\n        placeholder=\"Enter text...\"\r\n        ref={expenseTextInput}\r\n        required\r\n      />\r\n      <div>\r\n        <label htmlFor=\"expenseAmount\">Amount</label>\r\n        <div>(negative - expense,positive-income)</div>\r\n      </div>\r\n      <input\r\n        className={styles.input}\r\n        id=\"expenseAmount\"\r\n        type=\"number\"\r\n        placeholder=\"Enter amount...\"\r\n        ref={expenseAmountInput}\r\n        required\r\n      />\r\n      <button className={styles.submitBtn}>\r\n        {/* Change text to Edit Transaction if an expense is to be updated */}\r\n        Add Transaction\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAoC;EAAAC,EAAA;EAAA,IAA9BC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IAAEC,SAAS,GAAAH,IAAA,CAATG,SAAS;EAC1C,IAAMC,gBAAgB,GAAGT,MAAM,CAAC,CAAC;EACjC,IAAMU,kBAAkB,GAAGV,MAAM,CAAC,CAAC;;EAEnC;EACA;EACAD,SAAS,CAAC,YAAI,CAAC,CAAC,EAAC,CAACY,GAAG,CAAC,CAAC;EAGvB,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,CAAC,EAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAMC,WAAW,GAAGN,gBAAgB,CAACO,OAAO,CAACC,KAAK;IAClD,IAAMC,aAAa,GAAGR,kBAAkB,CAACM,OAAO,CAACC,KAAK;IACtD,IAAIE,QAAQ,CAACD,aAAa,CAAC,KAAK,CAAC,EAAE;MACjC;IACF;IAEA,IAAME,OAAO,GAAG;MACdC,IAAI,EAAEN,WAAW;MACjBO,MAAM,EAAEJ,aAAa;MACrBK,EAAE,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;IACzB,CAAC;IACDlB,UAAU,CAACa,OAAO,CAAC;IACnBM,UAAU,CAAC,CAAC;IACZ;;IAEA;EACF,CAAC;;EAED,IAAMA,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBhB,kBAAkB,CAACM,OAAO,CAACC,KAAK,GAAG,EAAE;IACrCR,gBAAgB,CAACO,OAAO,CAACC,KAAK,GAAG,EAAE;EACrC,CAAC;EAED,oBACEd,OAAA;IAAMwB,SAAS,EAAE1B,MAAM,CAAC2B,IAAK;IAACC,QAAQ,EAAEjB,eAAgB;IAAAkB,QAAA,gBAEtD3B,OAAA;MAAA2B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAI,CAAC,eAC5BhC,OAAA;MAAOiC,OAAO,EAAC,aAAa;MAAAN,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAO,CAAC,eACzChC,OAAA;MACEoB,EAAE,EAAC,aAAa;MAChBI,SAAS,EAAE1B,MAAM,CAACoC,KAAM;MACxBC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,eAAe;MAC3BC,GAAG,EAAE/B,gBAAiB;MACtBgC,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACT,CAAC,eACFhC,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAOiC,OAAO,EAAC,eAAe;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAO,CAAC,eAC7ChC,OAAA;QAAA2B,QAAA,EAAK;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAK,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAC5C,CAAC,eACNhC,OAAA;MACEwB,SAAS,EAAE1B,MAAM,CAACoC,KAAM;MACxBd,EAAE,EAAC,eAAe;MAClBe,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,iBAAiB;MAC7BC,GAAG,EAAE9B,kBAAmB;MACxB+B,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACT,CAAC,eACFhC,OAAA;MAAQwB,SAAS,EAAE1B,MAAM,CAACyC,SAAU;MAAAZ,QAAA,EACoC;IAExE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAQ,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACL,CAAC;AAEX,CAAC;AAAC7B,EAAA,CAjEIF,WAAW;AAAAuC,EAAA,GAAXvC,WAAW;AAmEjB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}