{"ast":null,"code":"// import React, { useEffect, useRef } from \"react\";\n// import styles from \"./ExpenseForm.module.css\";\n\n// const ExpenseForm = ({ addExpense, editingExpense ,updateExpense  }) => {\n//   const expenseTextInput = useRef();\n//   const expenseAmountInput = useRef();\n//   const [isEditing, setIsEditing] = useState(false);\n\n//   // Use the useEffect hook here, to check if an expense is to be updated\n//   // If yes, the autofill the form values with the text and amount of the expense\n//   useEffect(() => {\n//     if (editingExpense) {\n//       setIsEditing(true);\n//     } else {\n//       setIsEditing(false);\n//       clearInput();\n//     }\n//   }, [editingExpense]);\n\n//   const onSubmitHandler = (e) => {\n//     e.preventDefault();\n//     const expenseText = expenseTextInput.current.value;\n//     const expenseAmount = expenseAmountInput.current.value;\n//     if (parseInt(expenseAmount) === 0) {\n//       return;\n//     }\n\n//     const expense = {\n//       text: expenseText,\n//       amount: expenseAmount,\n//       id: new Date().getTime()\n//     };\n//     if(isEditing){\n//       updateExpense(expense,expense.id)\n//     }else{\n//     addExpense(expense);\n//     }\n//     clearInput();\n//     return;\n\n//     // Logic to update expense here\n//   };\n\n//   const clearInput = () => {\n//     expenseAmountInput.current.value = \"\";\n//     expenseTextInput.current.value = \"\";\n//   };\n\n//   return (\n//     <form className={styles.form} onSubmit={onSubmitHandler}>\n//       {/* Change text to Edit Transaction if an expense is to be updated */}\n//       <h3>Add new transaction</h3>\n//       <label htmlFor=\"expenseText\">Text</label>\n//       <input\n//         id=\"expenseText\"\n//         className={styles.input}\n//         type=\"text\"\n//         placeholder=\"Enter text...\"\n//         ref={expenseTextInput}\n//         required\n//       />\n//       <div>\n//         <label htmlFor=\"expenseAmount\">Amount</label>\n//         <div>(negative - expense,positive-income)</div>\n//       </div>\n//       <input\n//         className={styles.input}\n//         id=\"expenseAmount\"\n//         type=\"number\"\n//         placeholder=\"Enter amount...\"\n//         ref={expenseAmountInput}\n//         required\n//       />\n//       <button className={styles.submitBtn}>\n//         {/* Change text to Edit Transaction if an expense is to be updated */}\n//         Add Transaction\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default ExpenseForm;","map":{"version":3,"names":[],"sources":["C:/Users/nandi/Downloads/q6_scaffold/q6_scaffold/src/components/ExpenseForm/ExpenseForm.js"],"sourcesContent":["// import React, { useEffect, useRef } from \"react\";\r\n// import styles from \"./ExpenseForm.module.css\";\r\n\r\n// const ExpenseForm = ({ addExpense, editingExpense ,updateExpense  }) => {\r\n//   const expenseTextInput = useRef();\r\n//   const expenseAmountInput = useRef();\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n\r\n\r\n//   // Use the useEffect hook here, to check if an expense is to be updated\r\n//   // If yes, the autofill the form values with the text and amount of the expense\r\n//   useEffect(() => {\r\n//     if (editingExpense) {\r\n//       setIsEditing(true);\r\n//     } else {\r\n//       setIsEditing(false);\r\n//       clearInput();\r\n//     }\r\n//   }, [editingExpense]);\r\n\r\n//   const onSubmitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     const expenseText = expenseTextInput.current.value;\r\n//     const expenseAmount = expenseAmountInput.current.value;\r\n//     if (parseInt(expenseAmount) === 0) {\r\n//       return;\r\n//     }\r\n\r\n//     const expense = {\r\n//       text: expenseText,\r\n//       amount: expenseAmount,\r\n//       id: new Date().getTime()\r\n//     };\r\n//     if(isEditing){\r\n//       updateExpense(expense,expense.id)\r\n//     }else{\r\n//     addExpense(expense);\r\n//     }\r\n//     clearInput();\r\n//     return;\r\n\r\n//     // Logic to update expense here\r\n//   };\r\n\r\n//   const clearInput = () => {\r\n//     expenseAmountInput.current.value = \"\";\r\n//     expenseTextInput.current.value = \"\";\r\n//   };\r\n\r\n//   return (\r\n//     <form className={styles.form} onSubmit={onSubmitHandler}>\r\n//       {/* Change text to Edit Transaction if an expense is to be updated */}\r\n//       <h3>Add new transaction</h3>\r\n//       <label htmlFor=\"expenseText\">Text</label>\r\n//       <input\r\n//         id=\"expenseText\"\r\n//         className={styles.input}\r\n//         type=\"text\"\r\n//         placeholder=\"Enter text...\"\r\n//         ref={expenseTextInput}\r\n//         required\r\n//       />\r\n//       <div>\r\n//         <label htmlFor=\"expenseAmount\">Amount</label>\r\n//         <div>(negative - expense,positive-income)</div>\r\n//       </div>\r\n//       <input\r\n//         className={styles.input}\r\n//         id=\"expenseAmount\"\r\n//         type=\"number\"\r\n//         placeholder=\"Enter amount...\"\r\n//         ref={expenseAmountInput}\r\n//         required\r\n//       />\r\n//       <button className={styles.submitBtn}>\r\n//         {/* Change text to Edit Transaction if an expense is to be updated */}\r\n//         Add Transaction\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default ExpenseForm;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}